//
//  main.swift
//  #6 재귀함수와 반복문의 차이점 + if문과 switch문의 차이점
//
//  Created by Mangdi on 2022/08/23.
//

import Foundation

// #6 재귀함수와 반복문의 차이점 + if문과 switch문의 차이점
/*
 재귀함수 :
 재귀함수는 실행속도가 반복문에 비해 느리지만 가독성이 높은 장정을 지닌다.
 또 재귀함수는 자기 자신을 다시 호출하여 재참조하는 구조를 가진다.
 스택 메모리를 사용하며 반복적으로 자기 자신을 호출하면 스택에 계속해서 쌓이므로 오버플로우가 발생할수있다.
 오버플로우가 발생하면 충돌이 일어나면서 프로그램이 비정상적으로 종료될수 있다.
 
 반복문 : 특정 조건에 도달할 때까지 반복적으로 실행한다. 재귀함수와는 달리 스택 메모리에 한번만 올라간다.
 실행속도는 더 빠르지만 가독성은 더 떨어진다.
 
 이러한 장단점들로 보아 재귀함수는 간단한 알고리즘으로 구현할때 사용하는것이 좋아보이고
 코드의 길이가 더 길어지고 변수의 사용도 더 많아지게되면 반복문의 사용이 유리해보인다.
 */

/*
 if문과 switch문의 차이점
 - if문은 조건문이 많을수록 위에서 조건문 하나하나를 비교하며 내려오기때문에 복잡성이 증가한다.
 (복잡성이 증가하면 코드실행시간이 증가한다.) 그러나 switch문은 해당하는 case문으로 바로 점핑한다.
 조건이 많을수록 switch문이 if문보다 가독성이 좋다.
 즉, 조건문이 1,2개 정도라면 간단하게 if문으로 구현하면 좋지만
 조건문이 여러개일경우 switch문으로 작성하는편이 좋아보인다.
 */
